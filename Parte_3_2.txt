(a)
Bloco 0: escopo global ou escopo da declaração de g (onde ela pode ser chamada)
Bloco 1: escopo do corpo da função g 
Bloco 2: escopo da variável inc da linha 3 (onde ela pode ser usada)
Bloco 3: escopo da declaração da função f (onde ela pode ser chamada)
Bloco 4: escopo do corpo da função f
Bloco 5: escopo da declaração da função h (onde ela pode ser chamada)
Bloco 6: escopo do corpo da função h
Bloco 7: escopo da variável inc da linha 7 (onde ela pode ser usada)

(b)
As variáveis são x, y, z, inc (linha 3) e inc (linha 7)
As funções são f, g e h

(c)
x -> bloco 1
y -> bloco 4
z -> bloco 6
inc (linha 3) -> bloco 2
inc (linha 7) -> bloco 7
f -> bloco 3
g -> bloco 0
h -> bloco 6

(d) 
Numa situação de escopo estático, o resultado é 6. Isso ocorre pois o valor de 
'inc' na função f é avaliado na declaração da função, logo ele é 1. Assim, mesmo
que a função h atribua um valor diferente para 'inc', essa variável já foi
avaliada anteriormente para a função f e essa re-atribuição em h não afeta a 
função f.

Se SML possuísse escopo dinâmico, o resultado seria 7, pois o valor de 'inc' só 
seria avaliado no momento da execução e, no caso, ele é definido como 2 na 
função h e é usado como 2 na função f, visto que quando f é chamada, o valor de
'inc' é 2.

